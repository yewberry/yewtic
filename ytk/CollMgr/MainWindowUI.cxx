// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "MainWindowUI.h"

void MainWindowUI::cb_Open_i(Fl_Menu_*, void*) {
  mainWndObj->test_cb();
}
void MainWindowUI::cb_Open(Fl_Menu_* o, void* v) {
  ((MainWindowUI*)(o->parent()->user_data()))->cb_Open_i(o,v);
}

void MainWindowUI::cb_Turn_i(Fl_Menu_*, void*) {
  mainWndObj->log_switch_cb();
}
void MainWindowUI::cb_Turn(Fl_Menu_* o, void* v) {
  ((MainWindowUI*)(o->parent()->user_data()))->cb_Turn_i(o,v);
}

Fl_Menu_Item MainWindowUI::menu_mainMenuBar[] = {
 {"&File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"&Open File...", 0x4006f,  (Fl_Callback*)MainWindowUI::cb_Open, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&View", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Turn on/off Log window", 0,  (Fl_Callback*)MainWindowUI::cb_Turn, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

MainWindowUI::MainWindowUI() {
  { mainWindow = new Fl_Double_Window(646, 400, "Collection Manager");
    mainWindow->user_data((void*)(this));
    { mainMenuBar = new Fl_Menu_Bar(0, 0, 645, 25);
      mainMenuBar->menu(menu_mainMenuBar);
    } // Fl_Menu_Bar* mainMenuBar
    { treeView = new TreeView(0, 25, 140, 375);
      treeView->box(FL_DOWN_BOX);
      treeView->color(FL_BACKGROUND2_COLOR);
      treeView->selection_color(FL_BACKGROUND_COLOR);
      treeView->labeltype(FL_NORMAL_LABEL);
      treeView->labelfont(0);
      treeView->labelsize(14);
      treeView->labelcolor(FL_FOREGROUND_COLOR);
      treeView->align(Fl_Align(FL_ALIGN_TOP));
      treeView->when(FL_WHEN_RELEASE);
      treeView->end();
    } // TreeView* treeView
    { logView = new LogView(385, 230, 260, 170);
      logView->box(FL_DOWN_BOX);
      logView->color(FL_BACKGROUND_COLOR);
      logView->selection_color(FL_BACKGROUND_COLOR);
      logView->labeltype(FL_NORMAL_LABEL);
      logView->labelfont(0);
      logView->labelsize(14);
      logView->labelcolor(FL_FOREGROUND_COLOR);
      logView->align(Fl_Align(FL_ALIGN_TOP));
      logView->when(FL_WHEN_RELEASE);
      logView->end();
    } // LogView* logView
    { Fl_Group* o = new Fl_Group(140, 230, 245, 170);
      o->box(FL_DOWN_BOX);
      { totalFiles = new Fl_Output(215, 235, 100, 15, "Total            :");
        totalFiles->box(FL_FLAT_BOX);
        totalFiles->color(FL_BACKGROUND_COLOR);
        totalFiles->labeltype(FL_EMBOSSED_LABEL);
        totalFiles->labelsize(12);
        totalFiles->textsize(12);
        totalFiles->align(FL_ALIGN_LEFT);
      } // Fl_Output* totalFiles
      { processedFiles = new Fl_Output(215, 250, 70, 15, "Processed :");
        processedFiles->box(FL_FLAT_BOX);
        processedFiles->color(FL_BACKGROUND_COLOR);
        processedFiles->labeltype(FL_EMBOSSED_LABEL);
        processedFiles->labelsize(12);
        processedFiles->textsize(12);
      } // Fl_Output* processedFiles
      { remainFiles = new Fl_Output(215, 265, 75, 15, "Remain      :");
        remainFiles->box(FL_FLAT_BOX);
        remainFiles->color(FL_BACKGROUND_COLOR);
        remainFiles->labeltype(FL_EMBOSSED_LABEL);
        remainFiles->labelsize(12);
        remainFiles->textsize(12);
        totalFiles->align(FL_ALIGN_LEFT);
      } // Fl_Output* remainFiles
      o->end();
    } // Fl_Group* o
    { tableView = new TableView(140, 25, 505, 205);
      tableView->box(FL_NO_BOX);
      tableView->color(FL_BACKGROUND_COLOR);
      tableView->selection_color(FL_BACKGROUND_COLOR);
      tableView->labeltype(FL_NORMAL_LABEL);
      tableView->labelfont(0);
      tableView->labelsize(14);
      tableView->labelcolor(FL_FOREGROUND_COLOR);
      tableView->align(Fl_Align(FL_ALIGN_TOP));
      tableView->when(FL_WHEN_RELEASE);
      tableView->end();
    } // TableView* tableView
    mainWindow->end();
    mainWindow->resizable(mainWindow);
  } // Fl_Double_Window* mainWindow
}

void MainWindowUI::show(int argc, char **argv) {
  LogInit(logView, true);
mainWindow->show(argc, argv);
}

void MainWindowUI::init(MainWindow* o) {
  mainWndObj = o;
}
